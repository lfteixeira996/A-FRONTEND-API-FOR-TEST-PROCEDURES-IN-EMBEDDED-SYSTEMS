#############################################################################################################################
#### The main function of this python application is:																						
####																	
####	- Remove the output folders of Doxygen (Clean State)
####	- Run Doxygen
####	- Update the table presented on "Available Keywords" Tab
####	- Run Doxygen again to update the tabs 
####
#### This very important because allow us to develop the test procedure with updated information																						
#############################################################################################################################

from __future__ import print_function
from os.path import join, dirname, abspath
import xlrd
import shutil
import xml.etree.ElementTree as ET
from shutil import copyfile
import os
import geral 
import time


#############################################################################################################################
#Function: 	updateTable
#Parameter: None
#Return:	None
#
#SSS:		ABHP-UPDI-020
#############################################################################################################################
def updateTable():

	tree = ET.parse('./doxygen/output/xml/index.xml')		#this file is generated by Doxygen
	root = tree.getroot()

	for compound in root.findall('compound'):

		kind_compound = compound.get('kind')				#find the line with kind=class
		name_compound = compound.find('name').text			#get the package of the class

		name_compound = name_compound.replace("::", '.')	#if the package contains "::", replace by "."
	
		#only care about classes
		if kind_compound == "class":
			
			for member in compound.getiterator('member'):
		
				kind_member = member.get('kind')				#find the line with kind=function
				name_member = member.find('name').text			#get the package of the class
			
				if kind_member == "function":	
					message = """<tr><td>"""+name_member+""" 					<td>"""+name_compound+"""\n</table>"""
					file_path = './doxygen/input/pages_layouts/MainPage.txt'
					lookup = "</table>"
					geral.writeInFile(file_path, lookup, message, False)
					with open('./inputs/database/key_database.txt','a') as f:
						f.write(name_member+"\t"+name_compound+"\n")				
#############################################################################################################################


#############################################################################################################################
#Function: 	stateDoxygen
#Parameter: clean_state
#Return:	None
#
#SSS:		ABHP-UPDI-010
#############################################################################################################################
def stateDoxygen(clean_state):

	if clean_state==True:
		#remove the output folder
		#this is done to make sure that we are in a clean state
		os.system("rm -rf ./doxygen/output");
		os.system("rm -rf ./doxygen/warning.log");
		os.system("rm -rf ./warning.log");
		os.system("rm -rf ./inputs/database/key_database.txt");

	#run Doxygen
	os.system("doxygen doxygen_conf");
	
	main_file_path = './doxygen/input/pages_layouts/MainPage.txt'
	temp_file_path = './doxygen/input/pages_layouts/MainPage_template.txt'
	
	geral.createFile(main_file_path, temp_file_path)
#############################################################################################################################


#############################################################################################################################
#Function: 	main
#Parameter: None
#Return:	None
#############################################################################################################################
def main():
	stateDoxygen(True);

	updateTable();

	stateDoxygen(False);

	os.system("cygstart ./doxygen/output/html/index.html");

	
if __name__== "__main__":
	start_time = time.time()
	main()	
	print("|------------------------------------------------------------|")
	print("| Running time: %s seconds" % (time.time() - start_time))
	print("|------------------------------------------------------------|")
	
#############################################################################################################################






